networks:
  sfbooks-network:
    driver: bridge

services:
  php:
    build:
      context: ./docker/php
    container_name: 'php'
    restart: unless-stopped
    tty: true
    environment:
    - POSTGRES_HOST=${POSTGRES_HOST}
    - POSTGRES_DB=${POSTGRES_DB}
    - POSTGRES_USER=${POSTGRES_USER}
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
    - postgres
    volumes:
      - '.:/var/www'
      - './docker/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini'
      - './docker/php/php.ini:/usr/local/etc/php/php.ini'
    working_dir: '/var/www'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - sfbooks-network

  nginx:
    image: nginx:1.23.2-alpine
    container_name: 'nginx'
    restart: unless-stopped
    tty: true
    depends_on:
      - php
    ports:
      - 8100:80
    volumes:
      - '.:/var/www'
      - './docker/nginx/conf.d/default.nginx:/etc/nginx/conf.d/default.conf'
    networks:
      - sfbooks-network

  postgres:
    container_name: 'postgres'
    image: postgres:15.1-alpine
    networks:
      - sfbooks-network
    ports:
      - ${POSTGRES_HOST_PORT}:${POSTGRES_CONTAINER_PORT}
    restart: always
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
    volumes:
      - ./docker/db/data:/var/lib/postgresql
